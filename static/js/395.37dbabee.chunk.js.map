{"version":3,"file":"static/js/395.37dbabee.chunk.js","mappings":"gPAWA,MAkGA,EAlGmBA,IAA8B,IAA7B,OAAEC,EAAM,YAAEC,GAAaF,EACzC,MAAMG,EAAYF,EAAOG,QAAQC,MAAM,KAAKC,MAAM,GAC5CC,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,GAExBC,EAAyB,OAATH,QAAS,IAATA,OAAS,EAATA,EAAWI,MAC9BC,GAAaA,EAASC,KAAOd,EAAOc,KAWvC,OACEC,EAAAA,EAAAA,MAACC,EAAU,CAAAC,SAAA,EACTC,EAAAA,EAAAA,KAACC,EAAkB,CACjBC,YAAaT,EACbU,QAASA,KAZoBrB,KAI/BM,EAHGK,GAGMW,EAAAA,EAAAA,IAAoBtB,IAFpBuB,EAAAA,EAAAA,IAAevB,GAG1B,EAQMwB,CAA0BxB,EAAO,EACjCiB,UAEFC,EAAAA,EAAAA,KAAA,OACEO,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,OAAMX,UAEXC,EAAAA,EAAAA,KAAA,QAAMW,EAAE,krBAGZd,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAACY,EAAO,CAAAb,UACNC,EAAAA,EAAAA,KAACa,EAAS,CAACC,IAAKhC,EAAOiC,IAAKC,IAAI,QAGlCnB,EAAAA,EAAAA,MAACoB,EAAY,CAAAlB,SAAA,EACXF,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CACGjB,EAAOoC,KAAK,KAAClB,EAAAA,EAAAA,KAACmB,EAAQ,CAAApB,SAAEjB,EAAOsC,QAAkB,KAAEtC,EAAOuC,SAE7DrB,EAAAA,EAAAA,KAAA,QAAAD,SAAOjB,EAAOwC,kBAEhBzB,EAAAA,EAAAA,MAAC0B,EAAQ,CAAAxB,SAAA,EACPF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAACwB,EAAQ,CAAAzB,SAAEf,EAAU,MACrBgB,EAAAA,EAAAA,KAACwB,EAAQ,CAAAzB,SAAEf,EAAU,MACrBgB,EAAAA,EAAAA,KAACwB,EAAQ,CAAAzB,SAAEjB,EAAO2C,iBAElBzB,EAAAA,EAAAA,KAACwB,EAAQ,CAAAzB,SAELjB,EAAO4C,YACLC,KAAKC,MAAMD,KAAKE,SAAW/C,EAAO4C,YAAYI,SAC9C5C,MAAM,KAAK,SAInBW,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAACwB,EAAQ,CAAAzB,SAAEjB,EAAOiD,QAClB/B,EAAAA,EAAAA,KAACwB,EAAQ,CAAAzB,SAAEjB,EAAOsC,SAClBpB,EAAAA,EAAAA,KAACwB,EAAQ,CAAAzB,SAAEiC,IAAQlD,EAAOmD,SAASC,OAAO,UAC1ClC,EAAAA,EAAAA,KAACwB,EAAQ,CAAAzB,SAELjB,EAAOqD,gBACLR,KAAKC,MAAMD,KAAKE,SAAW/C,EAAOqD,gBAAgBL,SAClD5C,MAAM,KAAK,eAMvBc,EAAAA,EAAAA,KAACoC,EAAe,CAACjC,QAASA,IAAMpB,EAAYD,GAAQiB,SAAC,iBAG1C,EAwBXD,EAAauC,EAAAA,GAAOC,GAAEC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kKAWf5B,EAAUyB,EAAAA,GAAOI,IAAGC,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,qEAMpB3B,EAAYwB,EAAAA,GAAOtB,IAAG4B,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,yFAOtBjB,EAAWc,EAAAA,GAAOI,IAAGG,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,iLAUrBhB,EAAWa,EAAAA,GAAOQ,KAAIC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,+NAatBrB,EAAWkB,EAAAA,GAAOQ,KAAIE,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,6BAGtBvB,EAAeoB,EAAAA,GAAOI,IAAGO,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,wKAUhCJ,EAAkBC,EAAAA,GAAOY,OAAMC,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,qbAsBxBvC,EAAqBoC,EAAAA,GAAOY,OAAME,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,uMAUhCY,GAAWA,EAAMlD,YAAc,UAAY,UAC7CkD,GAAWA,EAAMlD,YAAc,UAAY,e,kICrMxD,MA8HA,EA9HcrB,IAAwB,IAAvB,MAAEwE,EAAK,OAAEvE,GAAQD,EAqB9B,OAdAyE,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAgBC,IAAc,IAAb,IAAEC,GAAKD,EAChB,WAARC,GACFJ,GACF,EAKF,OAFAK,SAASC,iBAAiB,UAAWJ,GAE9B,KACLG,SAASE,oBAAoB,UAAWL,EAAc,CACvD,GACA,CAACF,KAGFrD,EAAAA,EAAAA,KAAC6D,EAAa,CAAC1D,QArBW2D,IACtBA,EAAEC,SAAWD,EAAEE,eACjBX,GACF,EAkB2CtD,UACzCF,EAAAA,EAAAA,MAACoE,EAAW,CAAAlE,SAAA,EACVC,EAAAA,EAAAA,KAACkE,EAAiB,CAAC/D,QAASA,IAAMkD,IAAQtD,UACxCF,EAAAA,EAAAA,MAAA,OACEU,MAAM,6BACNC,MAAM,KACNC,OAAO,KACP0D,QAAQ,YACRzD,KAAK,OAAMX,SAAA,EAEXC,EAAAA,EAAAA,KAAA,QACEW,EAAE,aACFyD,OAAO,UACPC,YAAY,MACZC,cAAc,QACdC,eAAe,WAEjBvE,EAAAA,EAAAA,KAAA,QACEW,EAAE,aACFyD,OAAO,UACPC,YAAY,MACZC,cAAc,QACdC,eAAe,gBAIrBvE,EAAAA,EAAAA,KAACwE,EAAa,CAAAzE,UACZC,EAAAA,EAAAA,KAACa,EAAS,CAACC,IAAKhC,EAAOiC,IAAKC,IAAI,QAGlCnB,EAAAA,EAAAA,MAAC4E,EAAQ,CAAA1E,SAAA,EACPF,EAAAA,EAAAA,MAAC6E,EAAa,CAAA3E,SAAA,CACXjB,EAAOoC,KAAK,KAAClB,EAAAA,EAAAA,KAAA,QAAAD,SAAOjB,EAAOsC,QAAc,KAAEtC,EAAOuC,SAErDxB,EAAAA,EAAAA,MAAC0B,EAAAA,GAAQ,CAAAxB,SAAA,EACPF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAACwB,EAAAA,GAAQ,CAAAzB,SAAEjB,EAAOG,WAClBY,EAAAA,EAAAA,MAAC2B,EAAAA,GAAQ,CAAAzB,SAAA,CAAC,MAAIjB,EAAOc,OACrBC,EAAAA,EAAAA,MAAC2B,EAAAA,GAAQ,CAAAzB,SAAA,CAAC,QAAMjB,EAAOuC,YAEzBxB,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAC2B,EAAAA,GAAQ,CAAAzB,SAAA,CAAC,QAAMjB,EAAOiD,SACvBlC,EAAAA,EAAAA,MAAC2B,EAAAA,GAAQ,CAAAzB,SAAA,CAAC,qBAAmBjB,EAAO6F,oBACpC9E,EAAAA,EAAAA,MAAC2B,EAAAA,GAAQ,CAAAzB,SAAA,CAAC,gBAAcjB,EAAO8F,qBAGnC5E,EAAAA,EAAAA,KAAC6E,EAAU,CAAA9E,UACTC,EAAAA,EAAAA,KAAA,KAAAD,SAAIjB,EAAOgG,iBAEbjF,EAAAA,EAAAA,MAACgF,EAAU,CAAA9E,SAAA,EACTC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,sCACHF,EAAAA,EAAAA,MAAC0B,EAAAA,GAAQ,CAAAxB,SAAA,EACPC,EAAAA,EAAAA,KAAA,OAAAD,SACGjB,EAAO4C,YAAYqD,KAAI,CAACC,EAAMC,KACtBjF,EAAAA,EAAAA,KAACwB,EAAAA,GAAQ,CAAAzB,SAAciF,GAARC,QAG1BjF,EAAAA,EAAAA,KAAA,OAAAD,SACGjB,EAAOqD,gBAAgB4C,KAAI,CAACC,EAAMC,KAC1BjF,EAAAA,EAAAA,KAACwB,EAAAA,GAAQ,CAAAzB,SAAciF,GAARC,cAK9BpF,EAAAA,EAAAA,MAACgF,EAAU,CAAA9E,SAAA,EACTC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,wBACHF,EAAAA,EAAAA,MAACqF,EAAW,CAAAnF,SAAA,CACTjB,EAAOqG,iBAAiBjG,MAAM,MAAM6F,KAAI,CAACC,EAAMC,KACvCjF,EAAAA,EAAAA,KAACoF,EAAa,CAAArF,SAAciF,GAARC,MAE7BpF,EAAAA,EAAAA,MAACuF,EAAa,CAAArF,SAAA,CAAC,YACHiC,IAAQlD,EAAOmD,SAASC,OAAO,WAE3CrC,EAAAA,EAAAA,MAACuF,EAAa,CAAArF,SAAA,CAAC,UAAQjB,EAAOwC,yBAIpCtB,EAAAA,EAAAA,KAACqF,EAAY,CAACC,GAAG,oBAAmBvF,SAAC,mBAEzB,EA2BP8D,EAAgBxB,EAAAA,GAAOI,IAAGF,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8OAa1ByB,EAAc5B,EAAAA,GAAOI,IAAGC,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,qMAYxBgC,EAAgBnC,EAAAA,GAAOI,IAAGE,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,iCAG1B3B,EAAYwB,EAAAA,GAAOtB,IAAG6B,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,2FAMtB0B,EAAoB7B,EAAAA,GAAOY,OAAMH,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,sIASjCqC,EAAaxC,EAAAA,GAAOC,GAAES,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,yIAStBkC,EAAgBrC,EAAAA,GAAOC,GAAEU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,6KAWzB6C,GAAehD,EAAAA,EAAAA,IAAOkD,EAAAA,GAAPlD,CAAYa,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,kPAa3B4C,EAAgB/C,EAAAA,GAAOQ,KAAIM,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,iKAU3B0C,EAAc7C,EAAAA,GAAOI,IAAG+C,IAAAA,GAAAhD,EAAAA,EAAAA,GAAA,qFAMxBiC,EAAWpC,EAAAA,GAAOoD,GAAEC,IAAAA,GAAAlD,EAAAA,EAAAA,GAAA,iC,gJC5NjC,MAgCA,EAhCkBmD,KAChB,MAAMrG,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBoG,EAAQC,IAAaC,EAAAA,EAAAA,WAAS,IAC9BC,EAAgBC,IAAqBF,EAAAA,EAAAA,UAAS,MAE/C/G,EAAeD,IACnB,MAAMmH,EAAOvC,SAASuC,KAEjBL,EAIHK,EAAKC,UAAUC,OAAO,eAHtBF,EAAKC,UAAUE,IAAI,cACnBJ,EAAkBlH,IAKpB+G,GAAWQ,IAAUA,GAAK,EAG5B,OACExG,EAAAA,EAAAA,MAACyG,EAAW,CAAAvG,SAAA,EACVC,EAAAA,EAAAA,KAACyE,EAAQ,CAAA1E,SACG,OAATT,QAAS,IAATA,OAAS,EAATA,EAAWyF,KAAKC,IAEbhF,EAAAA,EAAAA,KAACuG,EAAAA,GAAU,CAAezH,OAAQkG,EAAMjG,YAAaA,GAApCiG,EAAKpF,QAI3BgG,GAAS5F,EAAAA,EAAAA,KAACwG,EAAAA,GAAK,CAAC1H,OAAQiH,EAAgB1C,MAAOtE,IAAkB,OACtD,EAMZ0F,EAAWpC,EAAAA,GAAOoD,GAAElD,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oIAMb8D,EAAcjE,EAAAA,GAAOI,IAAGC,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,oF,iCC/C9B,MAAMhD,EAAmBiH,GAAUA,EAAMnH,UAAUA,S","sources":["components/Adverts/AdvertItem.jsx","components/Modal/Modal.jsx","pages/Favorites.jsx","redux/favorites/selectors.js"],"sourcesContent":["import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectFavorites } from \"../../redux/favorites/selectors\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  addToFavorites,\r\n  deleteFromFavorites,\r\n} from \"../../redux/favorites/favoritesSlice\";\r\nimport numeral from \"numeral\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AdvertItem = ({ advert, toggleModal }) => {\r\n  const addresses = advert.address.split(\",\").slice(1);\r\n  const dispatch = useDispatch();\r\n  const favorites = useSelector(selectFavorites);\r\n\r\n  const isFavoriteCar = favorites?.some(\r\n    (favorite) => favorite.id === advert.id\r\n  );\r\n\r\n  const handleInputCheckboxChange = (advert) => {\r\n    if (!isFavoriteCar) {\r\n      dispatch(addToFavorites(advert));\r\n    } else {\r\n      dispatch(deleteFromFavorites(advert));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledCard>\r\n      <WrapCheckboxButton\r\n        $isFavorite={isFavoriteCar}\r\n        onClick={() => {\r\n          handleInputCheckboxChange(advert);\r\n        }}\r\n      >\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"18\"\r\n          height=\"18\"\r\n          fill=\"none\"\r\n        >\r\n          <path d=\"M15.6301 3.45753C15.247 3.07428 14.7922 2.77026 14.2916 2.56284C13.791 2.35542 13.2545 2.24866 12.7126 2.24866C12.1707 2.24866 11.6342 2.35542 11.1336 2.56284C10.633 2.77026 10.1782 3.07428 9.79509 3.45753L9.00009 4.25253L8.20509 3.45753C7.43132 2.68376 6.38186 2.24906 5.28759 2.24906C4.19331 2.24906 3.14386 2.68376 2.37009 3.45753C1.59632 4.2313 1.16162 5.28075 1.16162 6.37503C1.16162 7.4693 1.59632 8.51876 2.37009 9.29253L3.16509 10.0875L9.00009 15.9225L14.8351 10.0875L15.6301 9.29253C16.0133 8.90946 16.3174 8.45464 16.5248 7.95404C16.7322 7.45345 16.839 6.91689 16.839 6.37503C16.839 5.83316 16.7322 5.2966 16.5248 4.79601C16.3174 4.29542 16.0133 3.84059 15.6301 3.45753Z\" />\r\n        </svg>\r\n      </WrapCheckboxButton>\r\n      <div>\r\n        <WrapImg>\r\n          <StyledImg src={advert.img} alt=\"\" />\r\n        </WrapImg>\r\n\r\n        <WrapMainInfo>\r\n          <span>\r\n            {advert.make} <BlueSpan>{advert.model}</BlueSpan>, {advert.year}\r\n          </span>\r\n          <span>{advert.rentalPrice}</span>\r\n        </WrapMainInfo>\r\n        <WrapInfo>\r\n          <div>\r\n            <SpanInfo>{addresses[0]}</SpanInfo>\r\n            <SpanInfo>{addresses[1]}</SpanInfo>\r\n            <SpanInfo>{advert.rentalCompany}</SpanInfo>\r\n\r\n            <SpanInfo>\r\n              {\r\n                advert.accessories[\r\n                  Math.floor(Math.random() * advert.accessories.length)\r\n                ].split(\" \")[0]\r\n              }\r\n            </SpanInfo>\r\n          </div>\r\n          <div>\r\n            <SpanInfo>{advert.type}</SpanInfo>\r\n            <SpanInfo>{advert.model}</SpanInfo>\r\n            <SpanInfo>{numeral(advert.mileage).format(\"0,0\")}</SpanInfo>\r\n            <SpanInfo>\r\n              {\r\n                advert.functionalities[\r\n                  Math.floor(Math.random() * advert.functionalities.length)\r\n                ].split(\" \")[0]\r\n              }\r\n            </SpanInfo>\r\n          </div>\r\n        </WrapInfo>\r\n      </div>\r\n      <LearnMoreButton onClick={() => toggleModal(advert)}>\r\n        Learn more\r\n      </LearnMoreButton>\r\n    </StyledCard>\r\n  );\r\n};\r\n\r\nAdvertItem.propTypes = {\r\n  advert: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    make: PropTypes.string.isRequired,\r\n    model: PropTypes.string.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    rentalPrice: PropTypes.string.isRequired,\r\n    img: PropTypes.string.isRequired,\r\n    address: PropTypes.string.isRequired,\r\n    rentalCompany: PropTypes.string.isRequired,\r\n    accessories: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    mileage: PropTypes.number.isRequired,\r\n    functionalities: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  }).isRequired,\r\n  toggleModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AdvertItem;\r\n\r\nconst StyledCard = styled.li`\r\n  position: relative;\r\n  display: flex;\r\n  width: 274px;\r\n  height: 426px;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n\r\n  flex-shrink: 0;\r\n`;\r\n\r\nexport const WrapImg = styled.div`\r\n  width: 274px;\r\n  height: 268px;\r\n  margin-bottom: 14px;\r\n`;\r\n\r\nexport const StyledImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  border-radius: 14px;\r\n`;\r\n\r\nexport const WrapInfo = styled.div`\r\n  font-size: 12px;\r\n  color: rgb(18, 20, 23, 0.5);\r\n  font-weight: 400;\r\n  margin-bottom: 28px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: flex-start;\r\n`;\r\n\r\nexport const SpanInfo = styled.span`\r\n  padding-left: 6px;\r\n  padding-right: 6px;\r\n  border-right: 1px solid rgb(18, 20, 23, 0.1);\r\n\r\n  &:first-child {\r\n    padding-left: 0;\r\n  }\r\n  &:last-child {\r\n    padding-right: 0;\r\n    border-right: none;\r\n  }\r\n`;\r\nexport const BlueSpan = styled.span`\r\n  color: #3470ff;\r\n`;\r\nexport const WrapMainInfo = styled.div`\r\n  color: #121417;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  line-height: 1.5;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst LearnMoreButton = styled.button`\r\n  position: absolute;\r\n  bottom: 15px;\r\n  display: flex;\r\n  width: 274px;\r\n  padding: 12px 99px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 12px;\r\n  background: #3470ff;\r\n  border: transparent;\r\n  cursor: pointer;\r\n  color: var(--White, #fff);\r\n  font-family: Manrope;\r\n  font-size: 14px;\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  line-height: 20px;\r\n  &:hover {\r\n    background: #0b44cd;\r\n  }\r\n`;\r\nexport const WrapCheckboxButton = styled.button`\r\n  background-color: transparent;\r\n  border: none;\r\n  padding: 0;\r\n  cursor: pointer;\r\n  position: absolute;\r\n  top: 14px;\r\n  right: 14px;\r\n\r\n  svg {\r\n    stroke: ${(props) => (props.$isFavorite ? \"#3470FF\" : \"white\")};\r\n    fill: ${(props) => (props.$isFavorite ? \"#3470FF\" : \"transparent\")};\r\n  }\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport numeral from \"numeral\";\r\nimport { SpanInfo, WrapInfo } from \"../Adverts/AdvertItem\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Modal = ({ close, advert }) => {\r\n  const handleClickOutside = (e) => {\r\n    if (e.target === e.currentTarget) {\r\n      close();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = ({ key }) => {\r\n      if (key === \"Escape\") {\r\n        close();\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"keydown\", handleKeyDown);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", handleKeyDown);\r\n    };\r\n  }, [close]);\r\n\r\n  return (\r\n    <StyledOverlay onClick={handleClickOutside}>\r\n      <StyledModal>\r\n        <StyledCloseButton onClick={() => close()}>\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            viewBox=\"0 0 24 24\"\r\n            fill=\"none\"\r\n          >\r\n            <path\r\n              d=\"M18 6L6 18\"\r\n              stroke=\"#121417\"\r\n              strokeWidth=\"1.8\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n            />\r\n            <path\r\n              d=\"M6 6L18 18\"\r\n              stroke=\"#121417\"\r\n              strokeWidth=\"1.8\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n            />\r\n          </svg>\r\n        </StyledCloseButton>\r\n        <StyledImgWrap>\r\n          <StyledImg src={advert.img} alt=\"\" />\r\n        </StyledImgWrap>\r\n\r\n        <StyledUl>\r\n          <StyledCarName>\r\n            {advert.make} <span>{advert.model}</span>, {advert.year}\r\n          </StyledCarName>\r\n          <WrapInfo>\r\n            <div>\r\n              <SpanInfo>{advert.address}</SpanInfo>\r\n              <SpanInfo>Id:{advert.id}</SpanInfo>\r\n              <SpanInfo>Year:{advert.year}</SpanInfo>\r\n            </div>\r\n            <div>\r\n              <SpanInfo>Type:{advert.type}</SpanInfo>\r\n              <SpanInfo>Fuel Consumption: {advert.fuelConsumption}</SpanInfo>\r\n              <SpanInfo>Engine Size: {advert.engineSize}</SpanInfo>\r\n            </div>\r\n          </WrapInfo>\r\n          <StyledInfo>\r\n            <p>{advert.description}</p>\r\n          </StyledInfo>\r\n          <StyledInfo>\r\n            <p>Accessories and functionalities:</p>\r\n            <WrapInfo>\r\n              <div>\r\n                {advert.accessories.map((item, index) => {\r\n                  return <SpanInfo key={index}>{item}</SpanInfo>;\r\n                })}\r\n              </div>\r\n              <div>\r\n                {advert.functionalities.map((item, index) => {\r\n                  return <SpanInfo key={index}>{item}</SpanInfo>;\r\n                })}\r\n              </div>\r\n            </WrapInfo>\r\n          </StyledInfo>\r\n          <StyledInfo>\r\n            <p>Rental Conditions:</p>\r\n            <WrapOptions>\r\n              {advert.rentalConditions.split(\"\\n\").map((item, index) => {\r\n                return <StyledOptions key={index}>{item}</StyledOptions>;\r\n              })}\r\n              <StyledOptions>\r\n                Mileage: {numeral(advert.mileage).format(\"0,0\")}\r\n              </StyledOptions>\r\n              <StyledOptions>Price: {advert.rentalPrice}</StyledOptions>\r\n            </WrapOptions>\r\n          </StyledInfo>\r\n        </StyledUl>\r\n        <StyledButton to=\"tel:+380730000000\">Rental car</StyledButton>\r\n      </StyledModal>\r\n    </StyledOverlay>\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  close: PropTypes.func.isRequired,\r\n  advert: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    make: PropTypes.string.isRequired,\r\n    model: PropTypes.string.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    img: PropTypes.string.isRequired,\r\n    address: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    fuelConsumption: PropTypes.string.isRequired,\r\n    engineSize: PropTypes.string.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n    accessories: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    functionalities: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    rentalConditions: PropTypes.string.isRequired,\r\n    mileage: PropTypes.number.isRequired,\r\n    rentalPrice: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default Modal;\r\n\r\nexport const StyledOverlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 1200;\r\n  overflow: scroll;\r\n`;\r\nexport const StyledModal = styled.div`\r\n  width: 541px;\r\n  background-color: white;\r\n  border-radius: 24px;\r\n  padding: 40px;\r\n  overflow: hidden;\r\n  position: relative;\r\n  @media (max-width: 425px) {\r\n    padding: 10px;\r\n  }\r\n`;\r\n\r\nexport const StyledImgWrap = styled.div`\r\n  margin-bottom: 8px;\r\n`;\r\nexport const StyledImg = styled.img`\r\n  width: 541px;\r\n  height: 248px;\r\n  border-radius: 14px;\r\n  object-fit: cover;\r\n`;\r\nexport const StyledCloseButton = styled.button`\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  position: absolute;\r\n  top: 16px;\r\n  right: 16px;\r\n`;\r\n\r\nexport const StyledInfo = styled.li`\r\n  p {\r\n    color: #121417;\r\n    font-size: 14px;\r\n    font-weight: 500;\r\n    line-height: 1.4;\r\n    margin-bottom: 14px;\r\n  }\r\n`;\r\nexport const StyledCarName = styled.li`\r\n  color: #121417;\r\n  font-size: 18px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  line-height: 1.5;\r\n  margin-bottom: 8px;\r\n  span {\r\n    color: #3470ff;\r\n  }\r\n`;\r\nexport const StyledButton = styled(Link)`\r\n  padding: 12px 50px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 12px;\r\n  background: #3470ff;\r\n  color: var(--White, #fff);\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  line-height: 1.4;\r\n  border: none;\r\n`;\r\n\r\nexport const StyledOptions = styled.span`\r\n  padding: 7px 14px;\r\n  border-radius: 35px;\r\n  background: #f9f9f9;\r\n  color: #363535;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  line-height: 1.5;\r\n`;\r\n\r\nexport const WrapOptions = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  gap: 8px;\r\n`;\r\nexport const StyledUl = styled.ul`\r\n  margin-bottom: 34px;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectFavorites } from \"../redux/favorites/selectors\";\r\nimport AdvertItem from \"../components/Adverts/AdvertItem\";\r\nimport styled from \"styled-components\";\r\nimport Modal from \"../components/Modal/Modal\";\r\n\r\nconst Favorites = () => {\r\n  const favorites = useSelector(selectFavorites);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [selectedAdvert, setSelectedAdvert] = useState(null);\r\n\r\n  const toggleModal = (advert) => {\r\n    const body = document.body;\r\n\r\n    if (!isOpen) {\r\n      body.classList.add(\"modal-open\");\r\n      setSelectedAdvert(advert);\r\n    } else {\r\n      body.classList.remove(\"modal-open\");\r\n    }\r\n\r\n    setIsOpen((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <ListWrapper>\r\n      <StyledUl>\r\n        {favorites?.map((item) => {\r\n          return (\r\n            <AdvertItem key={item.id} advert={item} toggleModal={toggleModal} />\r\n          );\r\n        })}\r\n      </StyledUl>\r\n      {isOpen ? <Modal advert={selectedAdvert} close={toggleModal} /> : null}\r\n    </ListWrapper>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n\r\nconst StyledUl = styled.ul`\r\n  display: grid;\r\n  gap: 10px;\r\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n  justify-items: center;\r\n`;\r\nexport const ListWrapper = styled.div`\r\n  padding-left: 128px;\r\n  padding-right: 128px;\r\n  padding-bottom: 150px;\r\n`;\r\n","export const selectFavorites = (state) => state.favorites.favorites;\r\n"],"names":["_ref","advert","toggleModal","addresses","address","split","slice","dispatch","useDispatch","favorites","useSelector","selectFavorites","isFavoriteCar","some","favorite","id","_jsxs","StyledCard","children","_jsx","WrapCheckboxButton","$isFavorite","onClick","deleteFromFavorites","addToFavorites","handleInputCheckboxChange","xmlns","width","height","fill","d","WrapImg","StyledImg","src","img","alt","WrapMainInfo","make","BlueSpan","model","year","rentalPrice","WrapInfo","SpanInfo","rentalCompany","accessories","Math","floor","random","length","type","numeral","mileage","format","functionalities","LearnMoreButton","styled","li","_templateObject","_taggedTemplateLiteral","div","_templateObject2","_templateObject3","_templateObject4","span","_templateObject5","_templateObject6","_templateObject7","button","_templateObject8","_templateObject9","props","close","useEffect","handleKeyDown","_ref2","key","document","addEventListener","removeEventListener","StyledOverlay","e","target","currentTarget","StyledModal","StyledCloseButton","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","StyledImgWrap","StyledUl","StyledCarName","fuelConsumption","engineSize","StyledInfo","description","map","item","index","WrapOptions","rentalConditions","StyledOptions","StyledButton","to","Link","_templateObject10","ul","_templateObject11","Favorites","isOpen","setIsOpen","useState","selectedAdvert","setSelectedAdvert","body","classList","remove","add","prev","ListWrapper","AdvertItem","Modal","state"],"sourceRoot":""}